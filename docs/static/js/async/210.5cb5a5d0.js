"use strict";(self.webpackChunkrspress=self.webpackChunkrspress||[]).push([["210"],{5:function(e,n,s){s.r(n),s.d(n,{default:()=>t});var i=s(5893),a=s(65);function r(e){let n=Object.assign({p:"p",a:"a",img:"img",h1:"h1",code:"code",h2:"h2",pre:"pre",hr:"hr",h3:"h3",h4:"h4",ul:"ul",li:"li",h5:"h5",strong:"strong"},(0,a.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@leachain/keygen",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/npm/v/@leachain/keygen",alt:"npm version"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/LEA-Blockchain/keygen/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/github/license/LEA-Blockchain/keygen",alt:"GitHub license"})})]}),"\n",(0,i.jsxs)(n.h1,{id:"lea-keygen-command-line-usage",children:[(0,i.jsx)(n.code,{children:"lea-keygen"})," Command-Line Usage",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#lea-keygen-command-line-usage",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["This guide provides detailed instructions for using the ",(0,i.jsx)(n.code,{children:"lea-keygen"})," command-line tool to generate Lea Chain keysets."]}),"\n",(0,i.jsxs)(n.h2,{id:"installation",children:["Installation",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#installation",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["For one-off commands, you can use ",(0,i.jsx)(n.code,{children:"npx"})," without any installation:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx @leachain/keygen <command>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, you can install it globally to use the ",(0,i.jsx)(n.code,{children:"lea-keygen"})," command directly:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npm install -g @leachain/keygen\nlea-keygen <command>\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"command-reference",children:["Command Reference",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#command-reference",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"lea-keygen"})," tool supports two main commands: ",(0,i.jsx)(n.code,{children:"new"})," and ",(0,i.jsx)(n.code,{children:"verify"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"new",children:[(0,i.jsx)(n.code,{children:"new"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#new",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Generates a new keyset."}),"\n",(0,i.jsxs)(n.h4,{id:"synopsis",children:["Synopsis",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#synopsis",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"lea-keygen new [options]\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"options",children:["Options",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#options",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--no-outfile"}),": Prints the generated keyset to standard output (",(0,i.jsx)(n.code,{children:"stdout"}),") as a JSON array instead of saving it to a file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--outfile <path>"}),": Specifies a custom file path to save the keyset. If this is not provided, the keyset is saved to ",(0,i.jsx)(n.code,{children:"<address>.json"})," in the current directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--force"}),": If a keyset file already exists at the target path, this flag allows overwriting it. Without this flag, the tool will exit with an error to prevent accidental data loss."]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"examples",children:["Examples",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#examples",children:"#"})]}),"\n",(0,i.jsxs)(n.h5,{id:"1-generate-a-keyset-and-save-to-a-file",children:["1. Generate a Keyset and Save to a File",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-generate-a-keyset-and-save-to-a-file",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"This is the default behavior. It generates a new keyset and saves it to a file named after the derived public address."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx @leachain/keygen new\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output (to stderr):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Public Address: lea1q...\nKeyset saved to: /path/to/project/lea1q....json\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The resulting file will contain the full keyset with secure file permissions (",(0,i.jsx)(n.code,{children:"600"}),")."]}),"\n",(0,i.jsxs)(n.h5,{id:"2-generate-a-keyset-and-print-to-console",children:["2. Generate a Keyset and Print to Console",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-generate-a-keyset-and-print-to-console",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"--no-outfile"})," flag to prevent writing to a file and instead print the keyset to ",(0,i.jsx)(n.code,{children:"stdout"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx @leachain/keygen new --no-outfile\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output (to stdout):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:"[\n  [10, 20, 30, ...],\n  [\n    [10, 20, 30, ...],\n    [10, 20, 30, ...]\n  ]\n]\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output (to stderr):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Public Address: lea1q...\nKeyset generated to stdout.\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"verify",children:[(0,i.jsx)(n.code,{children:"verify"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#verify",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Displays the public address for a given keyset file."}),"\n",(0,i.jsxs)(n.h4,{id:"synopsis-1",children:["Synopsis",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#synopsis-1",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"lea-keygen verify <file_path>\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<file_path>"}),": The path to the keyset JSON file."]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"description",children:["Description",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#description",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"This command reads a keyset file, derives the public address from it, and prints the address to standard output. This is useful for verifying the address of a wallet without needing to generate a new key."}),"\n",(0,i.jsxs)(n.h4,{id:"example",children:["Example",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#example",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx @leachain/keygen verify ./my-keys/main-wallet.json\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output (to stdout):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"lea1q...\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"license",children:["License",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#license",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["This project is licensed under the MIT License. See the ",(0,i.jsx)(n.a,{href:"/LICENSE",children:"LICENSE"})," file for details."]})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}let t=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["tools%2Fgenerated%2Flea-keygen.md"]={toc:[{text:"Installation",id:"installation",depth:2},{text:"Command Reference",id:"command-reference",depth:2},{text:"`new`",id:"new",depth:3},{text:"Synopsis",id:"synopsis",depth:4},{text:"Options",id:"options",depth:4},{text:"Examples",id:"examples",depth:4},{text:"`verify`",id:"verify",depth:3},{text:"Synopsis",id:"synopsis-1",depth:4},{text:"Description",id:"description",depth:4},{text:"Example",id:"example",depth:4},{text:"License",id:"license",depth:2}],title:"`lea-keygen` Command-Line Usage",headingTitle:"`lea-keygen` Command-Line Usage",frontmatter:{}}}}]);