"use strict";(self.webpackChunkrspress=self.webpackChunkrspress||[]).push([["546"],{4929:function(e,n,s){s.r(n),s.d(n,{default:()=>c});var i=s(5893),t=s(65);function a(e){let n=Object.assign({p:"p",a:"a",img:"img",h1:"h1",code:"code",h2:"h2",pre:"pre",hr:"hr",h3:"h3",h4:"h4",ul:"ul",li:"li",strong:"strong"},(0,t.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@leachain/vm-exec",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/npm/v/@leachain/vm-exec",alt:"npm version"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/LEA-Blockchain/vm-exec/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/github/license/LEA-Blockchain/vm-exec",alt:"GitHub license"})})]}),"\n",(0,i.jsxs)(n.h1,{id:"lea-vm-exec-command-line-usage",children:[(0,i.jsx)(n.code,{children:"lea-vm-exec"})," Command-Line Usage",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#lea-vm-exec-command-line-usage",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["This guide provides detailed instructions for using the ",(0,i.jsx)(n.code,{children:"lea-vm-exec"})," command-line tool to execute smart contracts in the Lea-chain VM shim."]}),"\n",(0,i.jsxs)(n.h2,{id:"installation",children:["Installation",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#installation",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["For one-off commands, you can use ",(0,i.jsx)(n.code,{children:"npx"})," without any installation:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx @leachain/vm-exec <path/to/module.wasm> <entry_point> [flag] [value]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, you can install it globally to use the ",(0,i.jsx)(n.code,{children:"lea-vm-exec"})," command directly:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npm install -g @leachain/vm-exec\nlea-vm-exec <path/to/module.wasm> <entry_point> [flag] [value]\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"command-reference",children:["Command Reference",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#command-reference",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"lea-vm-exec"})," tool executes a WebAssembly smart contract by specifying the module path and an entry point function."]}),"\n",(0,i.jsxs)(n.h3,{id:"exec",children:[(0,i.jsx)(n.code,{children:"exec"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#exec",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Executes a function within a WebAssembly module, passing arguments as specified by the flags."}),"\n",(0,i.jsxs)(n.h4,{id:"synopsis",children:["Synopsis",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#synopsis",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"lea-vm-exec <path/to/module.wasm> <entry_point> [options]\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<path/to/module.wasm>"}),": The path to the WebAssembly module to execute."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<entry_point>"}),": The name of the exported function to call."]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"options",children:["Options",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#options",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--string <value>"}),": Pass a string to the entry point. The string is encoded and written into the Wasm memory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--number <value>"}),": Pass a number to the entry point."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--file <path>"}),": Pass the contents of a file to the entry point. The file content is read as bytes and written into the Wasm memory."]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"examples",children:["Examples",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#examples",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. Execute with a string argument"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'npx @leachain/vm-exec ./contract.wasm run_test --string "hello world"\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[INFO] Successfully instantiated wasm module. Entry point 'run_test' found.\n\n[INFO] Argument is a string.\n\n[INFO] Copied string content to wasm memory at address 1048816 (size: 11).\n\n[INFO] Calling entry point with (pointer, size).\n\n[INFO] Entry point returned exit code: 0\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. Execute with a file as an argument"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx @leachain/vm-exec ./contract.wasm process_data --file ./data.json\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[INFO] Successfully instantiated wasm module. Entry point 'process_data' found.\n\n[INFO] Argument is a file ('./data.json'). Reading content.\n\n[INFO] Copied file content to wasm memory at address 1048816 (size: 256).\n\n[INFO] Calling entry point with (pointer, size).\n\n[INFO] Entry point returned exit code: 0\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"metadata",children:["Metadata",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#metadata",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Name"}),": ",(0,i.jsx)(n.code,{children:"lea-vm-exec"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Version"}),": ",(0,i.jsx)(n.code,{children:"1.0.0"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": A CLI for executing LEA VM smart contracts via the VM shim."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Virtual Machine"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Repository"}),": ",(0,i.jsx)(n.code,{children:"https://github.com/LEA-Blockchain/vm-exec.git"})]}),"\n"]})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}let c=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["tools%2Fgenerated%2F%40leachain%2Fvm-exec.md"]={toc:[{text:"Installation",id:"installation",depth:2},{text:"Command Reference",id:"command-reference",depth:2},{text:"`exec`",id:"exec",depth:3},{text:"Synopsis",id:"synopsis",depth:4},{text:"Options",id:"options",depth:4},{text:"Examples",id:"examples",depth:4},{text:"Metadata",id:"metadata",depth:2}],title:"`lea-vm-exec` Command-Line Usage",headingTitle:"`lea-vm-exec` Command-Line Usage",frontmatter:{}}}}]);