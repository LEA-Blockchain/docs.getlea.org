"use strict";(self.webpackChunkrspress=self.webpackChunkrspress||[]).push([["454"],{1120:function(e,n,i){i.r(n),i.d(n,{default:()=>c});var t=i(5893),r=i(65);function s(e){let n=Object.assign({ul:"ul",li:"li",strong:"strong",h2:"h2",a:"a",p:"p",code:"code",em:"em",hr:"hr",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"LIP: 5"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Layer: Core Encoding"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Title: Generalize Vectors with Explicit Entry Sizes"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Author: Allwin Ketnawang"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Created: 2025-07-03"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Replaces: 2"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Superseded-By: 6"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Status: Replaced"})}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"abstract",children:["Abstract",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#abstract",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["This LIP proposes a fundamental, breaking change to the CTE specification. It renames ",(0,t.jsx)(n.code,{children:"Public Key List"})," and ",(0,t.jsx)(n.code,{children:"Signature List"})," to ",(0,t.jsx)(n.code,{children:"Public Key Vector"})," and ",(0,t.jsx)(n.code,{children:"Signature Vector"}),", and renames ",(0,t.jsx)(n.code,{children:"Legacy Index Reference"})," to ",(0,t.jsx)(n.code,{children:"Vector Index"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Crucially, it replaces the concept of a crypto-specific type code (as defined in LIP-2) with a generic ",(0,t.jsx)(n.strong,{children:"entry size code"}),". The ",(0,t.jsx)(n.code,{children:"TT"})," bits in the vector headers will now explicitly define the byte size of each element in the vector's data payload. This simplifies the core CTE parsing logic by decoupling it from cryptographic scheme specifics, making the format more flexible and forward-compatible. This proposal renders LIP-2 obsolete."]}),"\n",(0,t.jsxs)(n.h2,{id:"motivation",children:["Motivation",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#motivation",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["LIP-2 coupled the ",(0,t.jsx)(n.code,{children:"TT"})," type code directly to a cryptographic algorithm (e.g., ",(0,t.jsx)(n.code,{children:"TT=00"})," for Ed25519). While this provided semantic meaning at the parsing layer, it also made the core format rigid. Adding a new algorithm or a variant with the same key size would require a new ",(0,t.jsx)(n.code,{children:"TT"})," code and a specification update."]}),"\n",(0,t.jsxs)(n.p,{children:["This proposal simplifies the parser's responsibility to a purely structural one: read a vector of N items, where each item is X bytes long. The ",(0,t.jsx)(n.code,{children:"TT"})," code now simply defines 'X'. The semantic interpretation of ",(0,t.jsx)(n.em,{children:"what"}),' those bytes represent (e.g., an Ed25519 key vs. an SLH-DSA key) is moved to the application layer, where it ultimately matters. This makes the base CTE format more generic and extensible. The renaming to "Vector" and "Vector Index" reflects this more generic, structural nature.']}),"\n",(0,t.jsxs)(n.h2,{id:"specification",children:["Specification",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#specification",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["This LIP replaces the specifications for Tag ",(0,t.jsx)(n.code,{children:"00"})," and Tag ",(0,t.jsx)(n.code,{children:"01"})," as defined in LIP-2 and renames the IxData Sub-Type ",(0,t.jsx)(n.code,{children:"00"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"41-public-key-vector-tag-00---updated",children:["4.1. Public Key Vector (Tag ",(0,t.jsx)(n.code,{children:"00"}),") - Updated",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-public-key-vector-tag-00---updated",children:"#"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tag:"})," ",(0,t.jsx)(n.code,{children:"00"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Encodes a vector of one or more public keys. The size of each key is determined by the header byte's Entry Size Code."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Header Byte:"}),"\n",(0,t.jsxs)(n.table,{children:["\n",(0,t.jsxs)(n.thead,{children:["\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.th,{align:"left",children:"Bits"}),"\n",(0,t.jsx)(n.th,{align:"left",children:"Field"}),"\n",(0,t.jsx)(n.th,{align:"left",children:"Description"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.tbody,{children:["\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:"7-6"}),"\n",(0,t.jsxs)(n.td,{align:"left",children:["Tag (",(0,t.jsx)(n.code,{children:"00"}),")"]}),"\n",(0,t.jsx)(n.td,{align:"left",children:"Identifies this as a Public Key Vector."}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:"5-2"}),"\n",(0,t.jsx)(n.td,{align:"left",children:"Length (N)"}),"\n",(0,t.jsx)(n.td,{align:"left",children:"Number of keys in the vector (1-15)."}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:"1-0"}),"\n",(0,t.jsxs)(n.td,{align:"left",children:["Entry Size Code (",(0,t.jsx)(n.code,{children:"TT"}),")"]}),"\n",(0,t.jsx)(n.td,{align:"left",children:"Specifies the size of each key (see table below)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Entry Size Codes (",(0,t.jsx)(n.code,{children:"TT"}),"):"]}),"\n",(0,t.jsxs)(n.table,{children:["\n",(0,t.jsxs)(n.thead,{children:["\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsxs)(n.th,{align:"left",children:[(0,t.jsx)(n.code,{children:"TT"})," (Bin)"]}),"\n",(0,t.jsx)(n.th,{align:"left",children:"Key Size (Bytes)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.tbody,{children:["\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"00"})}),"\n",(0,t.jsx)(n.td,{align:"left",children:"32"}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"01"})}),"\n",(0,t.jsx)(n.td,{align:"left",children:"64"}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"10"})}),"\n",(0,t.jsx)(n.td,{align:"left",children:"128"}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"11"})}),"\n",(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.strong,{children:"Unused"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"42-signature-vector-tag-01---updated",children:["4.2. Signature Vector (Tag ",(0,t.jsx)(n.code,{children:"01"}),") - Updated",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#42-signature-vector-tag-01---updated",children:"#"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tag:"})," ",(0,t.jsx)(n.code,{children:"01"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Encodes a vector of one or more cryptographic signatures or signature hashes. The size of each item is determined by the header byte's Entry Size Code."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Header Byte:"}),"\n",(0,t.jsxs)(n.table,{children:["\n",(0,t.jsxs)(n.thead,{children:["\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.th,{align:"left",children:"Bits"}),"\n",(0,t.jsx)(n.th,{align:"left",children:"Field"}),"\n",(0,t.jsx)(n.th,{align:"left",children:"Description"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.tbody,{children:["\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:"7-6"}),"\n",(0,t.jsxs)(n.td,{align:"left",children:["Tag (",(0,t.jsx)(n.code,{children:"01"}),")"]}),"\n",(0,t.jsx)(n.td,{align:"left",children:"Identifies this as a Signature Vector."}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:"5-2"}),"\n",(0,t.jsx)(n.td,{align:"left",children:"Length (N)"}),"\n",(0,t.jsx)(n.td,{align:"left",children:"Number of items in the vector (1-15)."}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:"1-0"}),"\n",(0,t.jsxs)(n.td,{align:"left",children:["Entry Size Code (",(0,t.jsx)(n.code,{children:"TT"}),")"]}),"\n",(0,t.jsx)(n.td,{align:"left",children:"Specifies the size of each item (see table below)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Entry Size Codes (",(0,t.jsx)(n.code,{children:"TT"}),"):"]}),"\n",(0,t.jsxs)(n.table,{children:["\n",(0,t.jsxs)(n.thead,{children:["\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsxs)(n.th,{align:"left",children:[(0,t.jsx)(n.code,{children:"TT"})," (Bin)"]}),"\n",(0,t.jsx)(n.th,{align:"left",children:"Item Size (Bytes)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.tbody,{children:["\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"00"})}),"\n",(0,t.jsx)(n.td,{align:"left",children:"32"}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"01"})}),"\n",(0,t.jsx)(n.td,{align:"left",children:"64"}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"10"})}),"\n",(0,t.jsx)(n.td,{align:"left",children:"128"}),"\n"]}),"\n",(0,t.jsxs)(n.tr,{children:["\n",(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"11"})}),"\n",(0,t.jsx)(n.td,{align:"left",children:"29792"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"431-vector-index-ixdata-sub-type-00---updated",children:["4.3.1. Vector Index (IxData Sub-Type ",(0,t.jsx)(n.code,{children:"00"}),") - Updated",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#431-vector-index-ixdata-sub-type-00---updated",children:"#"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Name:"})," The field previously known as ",(0,t.jsx)(n.code,{children:"Legacy Index Reference"})," is renamed to ",(0,t.jsx)(n.code,{children:"Vector Index"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Provides a zero-based index into a ",(0,t.jsx)(n.code,{children:"Public Key Vector"})," or ",(0,t.jsx)(n.code,{children:"Signature Vector"}),". The responsibility for determining which vector is being referenced lies with the application layer, as per LIP-4."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"rationale",children:["Rationale",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rationale",children:"#"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Decoupling:"})," This change decouples the core CTE parser from the complexities of cryptographic validation. The parser's job is to validate structure, not semantics."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Flexibility:"})," The application layer can now define the meaning of a given entry size (e.g., a 32-byte public key is Ed25519 for one transaction type, and PQC for another). This requires no changes to the base protocol."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Forward Compatibility:"})," New cryptographic schemes can be adopted without requiring new ",(0,t.jsx)(n.code,{children:"TT"})," codes, as long as their key or signature sizes fit one of the existing size slots."]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"backwards-compatibility",children:["Backwards Compatibility",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#backwards-compatibility",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["This proposal is a ",(0,t.jsx)(n.strong,{children:"breaking change"})," and is ",(0,t.jsx)(n.strong,{children:"not backwards compatible"})," with implementations based on LIP-2."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Parsers compliant with LIP-2 expect the ",(0,t.jsx)(n.code,{children:"TT"})," code to define a specific cryptographic scheme. They will misinterpret the data if they receive a stream based on this new specification."]}),"\n",(0,t.jsxs)(n.li,{children:["For example, under LIP-2, a Signature field with ",(0,t.jsx)(n.code,{children:"TT=00"})," implies a 64-byte Ed25519 signature. Under this proposal, ",(0,t.jsx)(n.code,{children:"TT=00"})," for a Signature Vector implies a 32-byte item."]}),"\n",(0,t.jsx)(n.li,{children:"Adoption of this LIP requires a coordinated update of all CTE processors and defines a new, incompatible version of the CTE protocol."}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"security-considerations",children:["Security Considerations",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#security-considerations",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["The primary security consideration is that the responsibility for ",(0,t.jsx)(n.strong,{children:"correctly interpreting the cryptographic context"})," of the data is now entirely on the application layer."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Application logic MUST unambiguously determine the cryptographic algorithm to be used based on the transaction type or other contextual information."}),"\n",(0,t.jsx)(n.li,{children:"Failure to do so could lead to severe vulnerabilities, such as attempting to validate a signature with the wrong algorithm or against a key of a different type. The system's security now relies on the application layer being correct."}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"copyright",children:["Copyright",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#copyright",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["This LIP is licensed under the MIT License, in alignment with the main ",(0,t.jsx)(n.a,{href:"https://getlea.org",target:"_blank",rel:"noopener noreferrer",children:"LEA Project"})," License."]})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}let c=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["lips%2FLIP-0005.md"]={toc:[{text:"Abstract",id:"abstract",depth:2},{text:"Motivation",id:"motivation",depth:2},{text:"Specification",id:"specification",depth:2},{text:"4.1. Public Key Vector (Tag `00`) - Updated",id:"41-public-key-vector-tag-00---updated",depth:3},{text:"4.2. Signature Vector (Tag `01`) - Updated",id:"42-signature-vector-tag-01---updated",depth:3},{text:"4.3.1. Vector Index (IxData Sub-Type `00`) - Updated",id:"431-vector-index-ixdata-sub-type-00---updated",depth:3},{text:"Rationale",id:"rationale",depth:2},{text:"Backwards Compatibility",id:"backwards-compatibility",depth:2},{text:"Security Considerations",id:"security-considerations",depth:2},{text:"Copyright",id:"copyright",depth:2}],title:"",headingTitle:"",frontmatter:{}}}}]);